<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 8\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.Xsl"?>
<FxCopReport Version="8">
 <Targets>
  <Target Name="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop\bin\Debug\OutlookDesktop.exe">
   <Modules>
    <Module Name="outlookdesktop.exe">
     <Namespaces>
      <Namespace Name="OutlookDesktop">
       <Types>
        <Type Name="AboutBox" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name=".ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="20">AboutBox.AboutBox() makes a call to System.String.Format(System.String,System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.String.Format(System.IFormatProvider,System.String,System.Object[]).</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="22">AboutBox.AboutBox() makes a call to System.String.Format(System.String,System.Object) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.String.Format(System.IFormatProvider,System.String,System.Object[]).</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="AssemblyCompany" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="get_AssemblyCompany():System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="103">'AboutBox.get_AssemblyCompany():String' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="AssemblyDescription" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="get_AssemblyDescription():System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="61">'AboutBox.get_AssemblyDescription():String' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="AssemblyTitle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="get_AssemblyTitle():System.String" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
             <Messages>
              <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
               <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="42">Replace the call to String.op_Inequality("") in 'AboutBox.get_AssemblyTitle():String' with a call to String.IsNullOrEmpty.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="InitializeComponent():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="83">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: '&amp;OK'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="127">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'About Outlook on the Desktop'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="72">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Copyright'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="48">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Product Name'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="60">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Version'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.Designer.cs" Line="93">AboutBox.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Web Site'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="linkWebsite_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="121">Modify 'AboutBox.linkWebsite_LinkClicked(Object, LinkLabelLinkClickedEventArgs):Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="picDonate_Click(System.Object,System.EventArgs):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="AboutBox.cs" Line="133">Modify 'AboutBox.picDonate_Click(Object, EventArgs):Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="folderViewTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Correct the casing of type name 'folderViewTypes'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FormMain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name=".ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="83">Change FormMain.FormMain() to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ChangeFolderType(OutlookDesktop.folderViewTypes):System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="379">Change FormMain.ChangeFolderType(folderViewTypes):Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="384">Change FormMain.ChangeFolderType(folderViewTypes):Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="ChangeTrayIconDate():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="455">ChangeTrayIconDate has a cyclomatic complexity of 32. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="InitializeComponent():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="317">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Outlook on the Desktop'</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MenuItem.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="255">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: '-'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="260">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'About'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="225">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Calendar'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="283">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Close'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="231">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Contacts'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="277">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Hide'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="237">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Inbox'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="243">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Notes'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="266">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Preferences'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="249">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Tasks'</Issue>
            </Message>
            <Message Id="System.Windows.Forms.NotifyIcon.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="203">FormMain.InitializeComponent():Void passes a literal as parameter 1 of a call to NotifyIcon.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Outlook on the Desktop'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="LoadSettings():System.Void" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="107">Modify 'FormMain.LoadSettings():Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="121">Modify 'FormMain.LoadSettings():Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="111">Change FormMain.LoadSettings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="128">Change FormMain.LoadSettings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="showHideDesktopComponent():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MenuItem.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="581">FormMain.showHideDesktopComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Hide'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormMain.cs" Line="576">FormMain.showHideDesktopComponent():Void passes a literal as parameter 1 of a call to MenuItem.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Show'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FormPrefs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="cmdOK_Click(System.Object,System.EventArgs):System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="486">Change FormPrefs.cmdOK_Click(Object, EventArgs):Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Confirm_Cancel():System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="189">Change FormPrefs.Confirm_Cancel():Boolean to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="InitializeComponent():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="416">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Height'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="384">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Narrow'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="273">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Opacity:'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="282">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Opaque'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="461">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Outlook on the Desktop Preferences'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="354">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Position'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="251">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Preferences'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="408">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Short'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="400">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Tall'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="290">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Transparent'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="392">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Wide'</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="375">FormPrefs.InitializeComponent():Void passes a literal as parameter 1 of a call to Control.set_Text(String):Void. Retrieve the following string argument from a resource table instead: 'Width'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Load_Settings():System.Void" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="133">Modify 'FormPrefs.Load_Settings():Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="90">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="99">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="109">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="119">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="129">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="135">Change FormPrefs.Load_Settings():Void to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Save_Settings():System.Boolean" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="FormPrefs.cs" Line="173">Modify 'FormPrefs.Save_Settings():Boolean' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Preferences" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name=".ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="Preferences.cs" Line="28">Modify 'Preferences.Preferences()' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="Preferences.cs" Line="30">Change Preferences.Preferences() to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DEFAULT_HEIGHT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove all underscores from member 'DEFAULT_HEIGHT'.</Issue>
            </Message>
            <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the capitalization of member name 'Preferences.DEFAULT_HEIGHT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DEFAULT_LEFT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove all underscores from member 'DEFAULT_LEFT'.</Issue>
            </Message>
            <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the capitalization of member name 'Preferences.DEFAULT_LEFT'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DEFAULT_OPACITY" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove all underscores from member 'DEFAULT_OPACITY'.</Issue>
            </Message>
            <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the capitalization of member name 'Preferences.DEFAULT_OPACITY'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DEFAULT_TOP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove all underscores from member 'DEFAULT_TOP'.</Issue>
            </Message>
            <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the capitalization of member name 'Preferences.DEFAULT_TOP'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="DEFAULT_WIDTH" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Member" TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove all underscores from member 'DEFAULT_WIDTH'.</Issue>
            </Message>
            <Message Id="Member" TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the capitalization of member name 'Preferences.DEFAULT_WIDTH'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="Opacity" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="get_Opacity():System.Double" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="Error" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="Preferences.cs" Line="90">Preferences.get_Opacity():Double makes a call to System.Double.ToString(System.String) that does not explicitly provide an IFormatProvider. This should be replaced with a call to System.Double.ToString(System.String,System.IFormatProvider).</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="StartWithWindows" Kind="Property" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="set_StartWithWindows(System.Boolean):System.Void" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="NonBreaking">
               <Issue Certainty="95" Level="CriticalError" Path="C:\Users\Michael\Documents\Visual Studio 2005\Projects\OutlookDesktop\OutlookDesktop" File="Preferences.cs" Line="75">Modify 'Preferences.set_StartWithWindows(Boolean):Void' to catch a more specific exception than 'System.Exception' or rethrow the exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="UnsafeNativeMethods" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="SetWindowPos(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32):System.Boolean" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2007-04-02 01:17:19Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of PInvoke UnsafeNativeMethods.SetWindowPos(IntPtr, Int32, Int32, Int32, Int32, Int32, UInt32):Boolean. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="MaintainabilityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the FxCop team.</Description>
   <Resolution Name="Default">'{0}' appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify '{0}' to catch a more specific exception than '{1}' or rethrow the exception.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotPassLiteralsAsLocalizedParameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>String literals that are embedded in source code are difficult to localize. Avoid passing string literals as arguments in circumstances where a localized string is generally expected. Most localized applications, for example, should localize string arguments that are passed to exception constructors. When creating an Exception instance, therefore, a string argument retrieved from a string table is more appropriate than a string literal.</Description>
   <Resolution Name="Default">{0} passes a literal as parameter {1} of a call to {2}. Retrieve the following string argument from a resource table instead: '{3}'</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are pascal-cased. Parameter identifiers are camel-cased. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor.</Description>
   <Resolution Name="Type">Correct the casing of type name '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove all underscores from member '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="LongAcronymsShouldBePascalCased" Category="Microsoft.Naming" CheckId="CA1705">
   <Name>Long acronyms should be pascal-cased</Name>
   <Description>Acronyms of three or more letters should be Pascal-cased. For example, use XmlSpace rather than XMLSpace. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the capitalization of member name '{0}'.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean pinvoke arguments with MarshalAs</Name>
   <Description>All boolean pinvoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Return">Add the MarshalAsAttribute to the return type of PInvoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="InteroperabilityRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the common language runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture.</Description>
   <Resolution Name="Default">{0} makes a call to {1} that does not explicitly provide an IFormatProvider. This should be replaced with a call to {2}.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control. If it is set to RightTolLeft.Inherit, check its parent until a value indicating Yes or No is found.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="8.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to String.{0}({1}) in '{2}' with a call to String.IsNullOrEmpty.</Resolution>
   <Owner />
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="8.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="Line">Line</String>
  <String Key="LocationNotStoredInPdb">&lt;Location not stored in Pdb&gt;</String>
  <String Key="Project">Project</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Microsoft Visual Studio 2005 Code Analysis Report</String>
 </Localized>
</FxCopReport>
